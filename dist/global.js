(()=>{class t extends HTMLElement{#t=[];static observedAttributes=["controls"];attributeChangedCallback(t,e,n){"controls"===t&&(this.#t=(n||"").split(/\s+/),this.#e())}get controls(){return this.#t}set controls(t){if(!(t instanceof Array))throw TypeError("value must be an array");this.#t=t.map(t=>t.toString()),this.setAttribute("aria-controls",this.#t.join(" "))}connectedCallback(){this.addEventListener("change",this),document.body.addEventListener("change",this)}disconnectedCallback(){this.removeEventListener("change",this),document.body.removeEventListener("change",this)}handleEvent(t){if("change"===t.type&&t.target instanceof HTMLInputElement&&t.target.matches('input[type="checkbox"]')){if(this.contains(t.target)){let e=[...document.querySelectorAll(this.#t.map(t=>`#${t}`).join(", "))].filter(t=>t instanceof HTMLInputElement),n=t.target.checked;e.forEach(t=>t.checked=n)}else this.#t.includes(t.target.id)&&this.#e()}}#e(){let t=[...document.querySelectorAll(this.#t.map(t=>`#${t}`).join(", "))].filter(t=>t instanceof HTMLInputElement),e=this.querySelector('input[type="checkbox"]');if(e){e.setAttribute("aria-controls",this.#t.join(" "));let n=t.length,c=t.filter(t=>t.checked).length;c===n?(e.indeterminate&&(e.checked=!0),e.indeterminate=!1):0===c?(e.checked=!1,e.indeterminate=!1):e.checked&&(e.indeterminate=!0)}}}((e="multi-check")=>{"customElements"in window&&customElements.define(e,t)})()})();
//# sourceMappingURL=global.js.map
