{"mappings":"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","sources":["src/index.js","src/MultiCheckElement.js"],"sourcesContent":["import MultiCheckElement from './MultiCheckElement.js';\n\n/**\n * @param {string} [name]\n * @returns {void}\n */\nconst define = (name = 'multi-check') => {\n  if ('customElements' in window) {\n    customElements.define(name, MultiCheckElement);\n  }\n};\n\nexport { MultiCheckElement, define };\n","/**\n * @customElement multi-check\n * @attr controls Space-separated list of IDs for checkboxes controlled by the\n * child checkbox\n */\nexport default class MultiCheckElement extends HTMLElement {\n  /** @type {string[]} */\n  #controls = [];\n\n  static observedAttributes = ['controls'];\n  \n  /**\n   * @param {string} name \n   * @param {string | undefined} _oldValue \n   * @param {string | undefined} newValue \n   */\n  attributeChangedCallback(name, _oldValue, newValue) {\n    if (name === 'controls') {\n      this.#controls = (newValue || '').split(/\\s+/);\n      this.#updateCheckbox();\n    }\n  }\n  \n  /** @returns {string[]} */\n  get controls() {\n    return this.#controls;\n  }\n  \n  /** @param {string[]} value */\n  set controls(value) {\n    if (!(value instanceof Array)) {\n      throw new TypeError('value must be an array');\n    }\n\n    this.#controls = value.map(v => v.toString());\n\n    this.setAttribute(\n      'aria-controls',\n      this.#controls.join(' ')\n    );\n  }\n  \n  connectedCallback() {\n    this.addEventListener('change', this);\n    document.body.addEventListener('change', this);\n  }\n  \n  disconnectedCallback() {\n    this.removeEventListener('change', this);\n    document.body.removeEventListener('change', this);\n  }\n  \n  /**\n   * @param {Event} event\n   * @returns {void}\n   */\n  handleEvent(event) {\n    if (\n      event.type !== 'change' ||\n      !(event.target instanceof HTMLInputElement) ||\n      !event.target.matches('input[type=\"checkbox\"]')\n    ) {\n      return;\n    }\n\n    if (this.contains(event.target)) {\n      const checkboxes = /** @type {HTMLInputElement[]} */ (\n        [...document.querySelectorAll(\n          this.#controls.map(id => `#${id}`).join(', ')\n        )].filter(el => el instanceof HTMLInputElement)\n      );\n\n      const childChecked = event.target.checked;\n      checkboxes.forEach(el => el.checked = childChecked);\n    } else if (this.#controls.includes(event.target.id)) {\n      this.#updateCheckbox();\n    }\n  }\n  \n  /** @returns {void} */\n  #updateCheckbox() {\n    const controlled = /** @type {HTMLInputElement[]} */ (\n      [...document.querySelectorAll(\n        this.#controls.map(id => `#${id}`).join(', ')\n      )].filter(el => el instanceof HTMLInputElement)\n    );\n    \n    /** @type {HTMLInputElement | null} */\n    const childCheckbox = this.querySelector('input[type=\"checkbox\"]');\n\n    if (childCheckbox) {\n      childCheckbox.setAttribute('aria-controls', this.#controls.join(' '));\n      const controlledCount = controlled.length;\n      const checkedCount = controlled.filter(el => el.checked).length;\n      \n      if (checkedCount === controlledCount) {\n        if (childCheckbox.indeterminate) {\n          childCheckbox.checked = true;\n        }\n        childCheckbox.indeterminate = false;\n      } else if (checkedCount === 0) {\n        childCheckbox.checked = false;\n        childCheckbox.indeterminate = false;\n      } else if (childCheckbox.checked) {\n        childCheckbox.indeterminate = true;\n      }\n    }\n  }\n}\n"],"names":[],"version":3,"file":"index.js.map"}